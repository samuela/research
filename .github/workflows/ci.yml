name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  odecontrol:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: julia/odecontrol
        shell: nix-shell --pure --run "sh {0}"

    steps:
      - uses: actions/checkout@v2

      - uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - name: Check julia version
        run: julia --eval "using InteractiveUtils; versioninfo()"

      - name: Julia instantiate and build
        run: julia --project --eval "using Pkg; Pkg.instantiate(); Pkg.build()"

      - run: julia --project difftaichi/tests/test_zero_cost_bug.jl
      - run: julia --project difftaichi/tests/toi_test1.jl
      - run: julia --project difftaichi/tests/toi_test2.jl
      - run: julia --project difftaichi/tests/toi_test3.jl
      - run: julia --project difftaichi/tests/toi_test4.jl
      - run: julia --project difftaichi/tests/toi_test5.jl
      - run: julia --project difftaichi/tests/toi_test6.jl
      - run: julia --project difftaichi/tests/toi_test7.jl
      - run: julia --project difftaichi/tests/toi_test8.jl
      - run: julia --project difftaichi/tests/toi_test9.jl
      - run: julia --project difftaichi/tests/toi_test10.jl
      - run: julia --project difftaichi/tests/toi_test11.jl

  boxes:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: julia/boxes

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Check julia version
        run: julia --eval "using InteractiveUtils; versioninfo()"

      - name: Julia instantiate and build
        run: julia --project --eval "using Pkg; Pkg.instantiate(); Pkg.build()"

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install --upgrade matplotlib

      - name: Install ffmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - run: julia --project src/test_biggest_box.jl
      - run: julia --project src/test_boxes.jl
      - run: julia --project src/pluto_maze.jl

      - uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          path: /tmp/results
